// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using backlogged_api.Data;

#nullable disable

namespace backlogged_api.Migrations
{
    [DbContext(typeof(BackloggedDBContext))]
    [Migration("20230528220949_AddPublisher")]
    partial class AddPublisher
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("backlogged_api.Models.Franchise", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Franchises");
                });

            modelBuilder.Entity("backlogged_api.Models.Game", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("backgroundImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("coverImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<Guid?>("franchiseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid?>("publisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<float>("rating")
                        .HasColumnType("real");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("franchiseId");

                    b.HasIndex("publisherId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("backlogged_api.Models.Publisher", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Publisher");
                });

            modelBuilder.Entity("backlogged_api.Models.Game", b =>
                {
                    b.HasOne("backlogged_api.Models.Franchise", "franchise")
                        .WithMany("games")
                        .HasForeignKey("franchiseId");

                    b.HasOne("backlogged_api.Models.Publisher", "publisher")
                        .WithMany("games")
                        .HasForeignKey("publisherId");

                    b.Navigation("franchise");

                    b.Navigation("publisher");
                });

            modelBuilder.Entity("backlogged_api.Models.Franchise", b =>
                {
                    b.Navigation("games");
                });

            modelBuilder.Entity("backlogged_api.Models.Publisher", b =>
                {
                    b.Navigation("games");
                });
#pragma warning restore 612, 618
        }
    }
}
